{
  "hash": "9a1c0e11e8c292fd0b8a350ce3b52e16",
  "result": {
    "engine": "knitr",
    "markdown": "---\ncategories: \"Lab 6\"\ntitle: \"Inference for Difference in two proportions\"\nexecute:\n  eval: true\nformat:\n  html: \n    code-link: true #Supposed to create a link to documentation but its not, for some reason.\n   # code-block-bg: true # \"lightblue\" Does not work well with dark mode.\n    code-block-border-left: \"#31BAE9\"\n    code-fold: show #also try true OR false and decide if you like it.\n    code-tools: false\n    code-copy: true\n---\n\n\n\n\n\n\n## [Introduction]{style=\"color:#4166f5;\"}\n\nIn Lab 5, we introduced the `infer` package and performed simulation-based statistical inference for a single proportion. In this lab, we will use the `infer` package to perform simulation-based inference for a difference in two proportions.\n\n## [Creating a quarto file]{style=\"color:#4166f5;\"}\n\nTo create your quarto file, follow the following steps:\n\n-   Go to File\\>New File \\> Quarto document. In the title field use **Inference for Difference in two proportions** then write your name under the `Author` field. Change the output option to `PDF`.\n\n-   Next, save the document as `Lab_06`. If you did it correctly, the file `Lab_06.qmd` should appear under the files section with a `.qmd` extension.\n\n## [Packages]{style=\"color:#4166f5;\"}\n\nIn this lab, you will need the following packages: `openintro`, `tidyverse`, and `infer`. Load them into your work space and run them by clicking the green button at the end of the chunk. If you are missing any of the packages, the program will prompt you to install them.\n\n``` toml\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(infer)\n```\n\n## [Scenario Description and Data]{style=\"color:#4166f5;\"}\n\nWe consider a study investigating sex discrimination in the 1970s, which is set in the context of personnel decisions within a bank. The research question we hope to answer is, “Are individuals who identify as female discriminated against in promotion decisions made by their managers who identify as male?” (Rosen and Jerdee 1974)\n\nThe data set we will use is called `sex_discrimination` and is contained in the `openintro` package. The data set contains 48 cases (rows) and two variables (columns). Load the data into your work space:\n\n``` toml\ndata(sex_discrimination)\n```\n\nExamine the data before you proceed. Verify that it actually has 48 rows (cases) and two columns (variables). To learn more about that data, you can run `?sex_discrimination` in the console or double click on the new object in the environment area to view it in an excel-like format.\n\n## [Hypotheses Statement]{style=\"color:#4166f5;\"}\n\nThe research question of interest here is: ***\"Are individuals who identify as female discriminated against in promotion decisions made by their managers who identify as male?\"***\n\nThe null and alternative hypotheses for the sex discrimination study are as follows:\n\n***Null Hyp:*** There is no discrimination in hiring decisions against individuals who identify as female. In other words, there is no difference in promotion rates (proportions) between male and female candidates.\n\n$$H_0 : p_1-p_2=0$$\n\nWhere,\n\n$p_1$ and $p_2$ represent the proportion of males and females respectively that were promoted.\n\n***Alternative Hyp:*** The variables sex and decision are not independent. There is a difference in promotion rates between male and female candidates in favor for male ones (i.e., There is discrimination against female candidates in promotion decisions).\n\n$$H_A : p_1-p_2>0$$\n\n## [Observed Statistic and Data Visualization]{style=\"color:#4166f5;\"}\n\nAn observed statistic in this scenario would be the difference in promotion rates in the data at hand. The statistic of interest here is ***the difference in proportions*** between male and female candidates.\n\nWe use the observed statistic as an estimate of the true population difference (note that we do not know the true difference in the population). The observed statistic is also called ***point estimate***.\n\nLet us make a grouped bar graph to show the distribution of males and females and the promotion decisions.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sex_discrimination, aes(x = sex, fill = decision)) +\n  geom_bar(position = \"dodge\") +\n  labs(title = \"Decision by Sex\", x = \"Sex\", y = \"Count\") +\n  scale_fill_manual(values = c(\"lightblue\", \"lightpink\"), \n                    labels = c(\"Yes\", \"No\"))\n```\n\n::: {.cell-output-display}\n![](Lab_6_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nIt is often useful to have counts on the bars to make your visualization easy to interpret. We can add the `geom_text()` function as shown below.As usual, play around with the values for the `width` and the `vjust` to see what happens.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= sex_discrimination, aes(x=sex, fill=decision)) + \n  geom_bar(position = \"dodge\") +\n  labs(title = \"Decision by Sex\", x = \"Sex\", y = \"Count\") +\n  scale_fill_manual(values = c(\"lightblue\", \"lightpink\"), \n                    labels = c(\"Yes\", \"No\"))+\n  geom_text(stat='count', aes(label=..count..), position=position_dodge(width=0.9), vjust=-0.2)\n```\n\n::: {.cell-output-display}\n![](Lab_6_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\nLet us compute the proportions for the promotions. We can use the `count()` function to count the cases by sex and decision. After that, we group by sex then make a new column for proportions using `mutate`. See code below:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsex_discrimination %>%\n\t\t\t\t  count(sex, decision) %>%\n\t\t\t\t  group_by(sex) %>%\n\t\t\t\t  mutate(prop = n/sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n# Groups:   sex [2]\n  sex    decision         n  prop\n  <fct>  <fct>        <int> <dbl>\n1 male   promoted        21 0.875\n2 male   not promoted     3 0.125\n3 female promoted        14 0.583\n4 female not promoted    10 0.417\n```\n\n\n:::\n\n```{.r .cell-code}\n# Note that the grouping (predictor) variable is gender, not decision.\n```\n:::\n\n\n\n\nFrom this table, we see that,\n\n\\begin{align}\n\\hat{p}_{diff}&=\\hat{p}_1-\\hat{p}_{2}\\\\\n&=87.5-58.33\\\\\n&= 0.292\n\\end{align}\n\nThus, the observed statistic is $0.292$.\n\n## [Running Simulations]{style=\"color:#4166f5;\"}\n\nNext, we use the `infer` pipeline to run 1,000 simulations as shown below. Be sure to study the code and understand what each step does. I have included notes in the form of comments to help you understand the code.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nsimulated_diffs <- sex_discrimination %>%\n\t\t      specify(decision ~ sex, success = \"promoted\") %>%\n\t\t\t    hypothesize(null = \"independence\") %>%\n\t\t\t    generate(reps = 1000, type = \"permute\") %>%\n\t\t\t    calculate(stat = \"diff in props\", order = c(\"male\", \"female\"))\n# specify: The response variable is decision and predictor is sex\n# Our \"success\" level in the case is \"promoted\".\n# Hypothesize: We set null to \"independence\" (i.e., decision and sex are independent)\n# Generate: We generate 1000 samples by permutation/randomization.\n# Calculate: The statistic of interest is \"diff in props\", and we subtract in order of male - female\n```\n:::\n\n\n\n\nRun the above code and study the object `simulated_diffs` that appears in the environment area. The column titled **replicate** represents the shuffle number. We have 1,000 shuffles (replicates). The second column (**stat**) represents the differences computed from each replicate.\n\n### [Using Infer for Observed Statistic]{style=\"color:#4166f5;\"}\n\nAs an option, you ca use the infer pipeline to compute the observed statistic as shown below. This is a much quicker way to compute the observed statistic.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsex_discrimination %>% \n  specify(decision ~ sex, success = \"promoted\") %>%\n  calculate(stat = \"diff in props\", order = c(\"male\", \"female\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: decision (factor)\nExplanatory: sex (factor)\n# A tibble: 1 × 1\n   stat\n  <dbl>\n1 0.292\n```\n\n\n:::\n:::\n\n\n\n\n## [Visulaizing the Null Distribution]{style=\"color:#4166f5;\"}\n\nNext, we want to create a histogram to visualize the distribution of the differences computed above. Remember we stored the differences as `simulated_diffs`. We will also place a vertical line to visualize the location of the observed statistic (the original difference of 0.292):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\t\t\tggplot(data=simulated_diffs, aes(x = stat)) + \n\t\t\tgeom_histogram()+\n\t\t\tgeom_vline(aes(xintercept = .292), color = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Lab_6_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n## [Getting the P-Value]{style=\"color:#4166f5;\"}\n\nThe P-value is the percent of scores that are at or beyond the observed statistic (i.e., the red line). It is the probability of observing a difference as extreme as 0.292 assuming that the null hypothesis is true (i.e., that there is no discrimination going on). The infer package comes with a function known as `get-p-value()` for computing the p-value from the null distribution (i.e., our simulated_diffs). See code below:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulated_diffs %>%\n\t\t\tget_p_value(obs_stat = 0.292, direction = \"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.007\n```\n\n\n:::\n\n```{.r .cell-code}\n# The argument obs_stat is for the observed statistic.\n# The argument direction is for the kind of hyp test (in this case right-tailed)\n```\n:::\n\n\n\n\n## [The conclusion in Contex]{style=\"color:#4166f5;\"}\n\nThe whole point of doing this is to answer the question, \"Is there discrimination going on against female applicants?\". Now, with a P-value as small as we have, it means that if there was no discrimination going on we would would expect to see a difference of 0.292 about 0.7\\% of the time. As you would agree, this is a very rare observation hence the results are **statistically discernible**. This means that the data provides strong evidence against the null hypothesis. We can conclude that discrimination is likely going on against female candidates.\n\nIt is common to use a cut off point of 5% to decide whether the null hypothesis is likely false. The cut off point used is often called a **discernibility level**. This is the value used in many parts of the text.\n\n## [Creating a Confidence Interval]{style=\"color:#4166f5;\"}\n\nThe hypothesis test tells us whether there is discrimination going on or not. It does not tell us anything about the magnitude (the difference in proportions) of the discrimination in the population. To estimate the magnitude of this difference, we create confidence interval, i.e., a range of values within which we expect to find the true difference in promotion rates (i.e., $p_1-p_2$). In most cases, we run both hypotheses tests and confidence intervals because the two compliment each other.\n\nBelow is the process for creating the confidence interval:\n\n### [Find the Observed statistic]{style=\"color:#4166f5;\"}\n\nJust like in the hypothesis test case, we need to find the observed statistic first. We can use `infer` to do this. Notice that we are skipping the `hypothesis` and `generate` steps. We are also saving the observed statistic as `d_hat`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_hat <- sex_discrimination %>% \n  specify(decision ~ sex, success = \"promoted\") %>%\n  calculate(stat = \"diff in props\", order = c(\"male\", \"female\"))\nprint(d_hat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: decision (factor)\nExplanatory: sex (factor)\n# A tibble: 1 × 1\n   stat\n  <dbl>\n1 0.292\n```\n\n\n:::\n:::\n\n\n\n\n### [Generate the Bootstrap Distribution]{style=\"color:#4166f5;\"}\n\nNext, we generate the bootstrap distribution. This is not the same as the null distribution found earlier. Bootstrap samples are generated by taking multiple samples from the sample (resampling) with replacement. We will generate 1,000 samples in this case. See code below:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nboot_dist <- sex_discrimination %>%\n  specify(decision ~ sex, success = \"promoted\") %>%\n  generate(reps = 1000, type = \"bootstrap\") %>% \n  calculate(stat = \"diff in props\", order = c(\"male\", \"female\"))\n```\n:::\n\n\n\n\nOnce you run the bootstrap samples, click to view the data. You have a list of 1000 differences generated via bootstrapping. Notice that we skipped the ***hypothesis*** step in the infer pipeline because this is not a hypothesis test.\n\n### [Visualize the Bootstrap Distribution]{style=\"color:#4166f5;\"}\n\nNext, you can create a histogram distribution of this distribution. Notice that it is centered around 0.292. This should not come as a surprise.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=boot_dist, aes(x = stat)) + \n\t\t\tgeom_histogram(binwidth = .03)+\n\t\t\tgeom_vline(aes(xintercept = .292), color = \"red\")\n```\n\n::: {.cell-output-display}\n![](Lab_6_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n### [Getting the Confidence Interval]{style=\"color:#4166f5;\"}\n\nThe function `get_ci` is used to create the confidence interval once you have generated the bootstrap distribution. By default, function creates a 95% confidence interval. This gives you the middle 95% of the data (in this case the simulated differences). The interval is built around the observed statistic.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npercentile_ci <- get_ci(boot_dist)\nprint(percentile_ci)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  lower_ci upper_ci\n     <dbl>    <dbl>\n1   0.0490    0.522\n```\n\n\n:::\n:::\n\n\n\n\nBelow is a way to use the built-in infer function to visualize the interval:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisualize(boot_dist) +\n  shade_confidence_interval(endpoints = percentile_ci)\n```\n\n::: {.cell-output-display}\n![](Lab_6_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n### [Interpreting the Confidence Interval]{style=\"color:#4166f5;\"}\n\nWe interpret the interval as follows: We are 95% confident that the true difference in promotion rates between male and female applicants is between 0.049 and 0.52.\n\nNotice that the interval we found does not include 0. This means that 0 is not a viable value. We had also rejected null hypothesis and so the results of the confidence interval and the null hypothesis are in agreement.\n\n## [Exercises]{style=\"color:#4166f5;\"}\n\nResearch Question: How rational and consistent is the behavior of the typical American college student?\n\nOne-hundred and fifty students were recruited in a study that aimed to understand whether reminding college students about saving money for later would make them more thriftier. The students were split into 2 equal groups (control and experiment) and were asked to respond to the following prompt:\n\n*\"Imagine that you have been saving some extra money on the side to make some purchases, and on your most recent visit to the video store you come across a special sale on a new video. This video is one with your favorite actor or actress, and your favorite type of movie (such as a comedy, drama, thriller, etc.). This particular video that you are considering is one you have been thinking about buying for a long time. It is available for a special sale price of \\$14.99. What would you do in this situation? Buy video or Not buy video?\"*\n\nThe data set for this study is available in the openintro package and is called `opportunity_cost`. Load all required packages (openintro, infer, and, tidyverse) and then load the data into your work space. As usual, you want to explore the data before you start your analyses.\n\nRecommended reading: Section 11.2 of the course text.\n\n1.  ***(2 pts)*** State the hypotheses (null and alternative) in words and in symbols.\n\n2.  ***(2 pts)*** Create a dodged bar graph to visualize the data. Be sure to show the frequencies on the bars.\n\n3.  ***(2 pts)*** Use the `count` and `group_by` functions to create a summary table summarizing the results. Compute the observed statistic.\n\n4.  In this problem, you will run a simulation-based hypothesis test to test the null hypothesis that you stated in exercise 1 above.\n\n    a)  ***(4 pts)*** Use the infer package to run 1000 simulations for the hypothesis test. Save the simulations as simulated_data.\n\n    b)  ***(2 pts)*** Create a histogram to visualize the distribution of the simulated_data. Include a vertical line showing the location of the observed statistic.\n\n    c)  ***(2 pts)*** Use the `get_p_value` function to find the P-value. Based on this P-value and a significance level of 0.05, write a conclusion for your hypothesis test in context.\n\n5.  ***(6 pts)*** Create a confidence interval to estimate the parameter of interest. Write an interpretation of your interval and state whether it agrees with the results of your hypothesis test.\n",
    "supporting": [
      "Lab_6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}